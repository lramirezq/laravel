declare const _default: {
    new (...args: any[]): {
        $: import("vue").ComponentInternalInstance;
        $data: {};
        $props: Partial<{
            disabled: boolean;
            inline: boolean;
            showCheckbox: boolean;
            showBorder: boolean | null;
            showLabels: boolean;
            spacingSize: number | null;
            swatchSize: number | string | null;
            backgroundColor: string;
            closeOnSelect: boolean;
            swatches: any[] | string;
            fallbackInputClass: any[] | Record<string, any> | string | null;
            fallbackInputType: string;
            fallbackOkClass: any[] | Record<string, any> | string | null;
            fallbackOkText: string;
            shapes: string;
            popoverX: string;
            popoverY: string;
            rowLength: number | string | null;
            showFallback: boolean;
            modelValue: string;
        }> & Omit<Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
            backgroundColor?: string | undefined;
            closeOnSelect?: boolean | undefined;
            swatches?: string | any[] | undefined;
            disabled?: boolean | undefined;
            fallbackInputClass?: string | any[] | Record<string, any> | null | undefined;
            fallbackInputType?: string | undefined;
            fallbackOkClass?: string | any[] | Record<string, any> | null | undefined;
            fallbackOkText?: string | undefined;
            inline?: boolean | undefined;
            shapes?: string | undefined;
            popoverX?: string | undefined;
            popoverY?: string | undefined;
            rowLength?: string | number | null | undefined;
            showBorder?: boolean | null | undefined;
            showFallback?: boolean | undefined;
            showCheckbox?: boolean | undefined;
            showLabels?: boolean | undefined;
            spacingSize?: number | null | undefined;
            swatchSize?: string | number | null | undefined;
            swatchStyle?: any[] | Record<string, any> | undefined;
            triggerStyle?: any[] | Record<string, any> | undefined;
            wrapperStyle?: any[] | Record<string, any> | undefined;
            modelValue?: string | undefined;
        }>, {
            backgroundColor: string;
            closeOnSelect: boolean;
            swatches: () => "basic";
            disabled: boolean;
            fallbackInputClass: null;
            fallbackInputType: () => "text";
            fallbackOkClass: null;
            fallbackOkText: string;
            inline: boolean;
            shapes: string;
            popoverX: string;
            popoverY: string;
            rowLength: null;
            showBorder: null;
            showFallback: boolean;
            showCheckbox: boolean;
            showLabels: boolean;
            spacingSize: null;
            swatchSize: null;
            modelValue: string;
        }>>> & {
            onClose?: ((...args: any[]) => any) | undefined;
            onOpen?: ((...args: any[]) => any) | undefined;
            "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
        } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "disabled" | "inline" | "showCheckbox" | "showBorder" | "showLabels" | "spacingSize" | "swatchSize" | "backgroundColor" | "closeOnSelect" | "swatches" | "fallbackInputClass" | "fallbackInputType" | "fallbackOkClass" | "fallbackOkText" | "shapes" | "popoverX" | "popoverY" | "rowLength" | "showFallback" | "modelValue">;
        $attrs: {
            [x: string]: unknown;
        };
        $refs: {
            [x: string]: unknown;
        };
        $slots: Readonly<{
            [name: string]: import("vue").Slot | undefined;
        }>;
        $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}> | null;
        $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}> | null;
        $emit: (event: "close" | "open" | "update:modelValue", ...args: any[]) => void;
        $el: any;
        $options: import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
            backgroundColor?: string | undefined;
            closeOnSelect?: boolean | undefined;
            swatches?: string | any[] | undefined;
            disabled?: boolean | undefined;
            fallbackInputClass?: string | any[] | Record<string, any> | null | undefined;
            fallbackInputType?: string | undefined;
            fallbackOkClass?: string | any[] | Record<string, any> | null | undefined;
            fallbackOkText?: string | undefined;
            inline?: boolean | undefined;
            shapes?: string | undefined;
            popoverX?: string | undefined;
            popoverY?: string | undefined;
            rowLength?: string | number | null | undefined;
            showBorder?: boolean | null | undefined;
            showFallback?: boolean | undefined;
            showCheckbox?: boolean | undefined;
            showLabels?: boolean | undefined;
            spacingSize?: number | null | undefined;
            swatchSize?: string | number | null | undefined;
            swatchStyle?: any[] | Record<string, any> | undefined;
            triggerStyle?: any[] | Record<string, any> | undefined;
            wrapperStyle?: any[] | Record<string, any> | undefined;
            modelValue?: string | undefined;
        }>, {
            backgroundColor: string;
            closeOnSelect: boolean;
            swatches: () => "basic";
            disabled: boolean;
            fallbackInputClass: null;
            fallbackInputType: () => "text";
            fallbackOkClass: null;
            fallbackOkText: string;
            inline: boolean;
            shapes: string;
            popoverX: string;
            popoverY: string;
            rowLength: null;
            showBorder: null;
            showFallback: boolean;
            showCheckbox: boolean;
            showLabels: boolean;
            spacingSize: null;
            swatchSize: null;
            modelValue: string;
        }>>> & {
            onClose?: ((...args: any[]) => any) | undefined;
            onOpen?: ((...args: any[]) => any) | undefined;
            "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
        }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "open" | "update:modelValue")[], string, {
            disabled: boolean;
            inline: boolean;
            showCheckbox: boolean;
            showBorder: boolean | null;
            showLabels: boolean;
            spacingSize: number | null;
            swatchSize: number | string | null;
            backgroundColor: string;
            closeOnSelect: boolean;
            swatches: any[] | string;
            fallbackInputClass: any[] | Record<string, any> | string | null;
            fallbackInputType: string;
            fallbackOkClass: any[] | Record<string, any> | string | null;
            fallbackOkText: string;
            shapes: string;
            popoverX: string;
            popoverY: string;
            rowLength: number | string | null;
            showFallback: boolean;
            modelValue: string;
        }, {}, string> & {
            beforeCreate?: ((() => void) | (() => void)[]) | undefined;
            created?: ((() => void) | (() => void)[]) | undefined;
            beforeMount?: ((() => void) | (() => void)[]) | undefined;
            mounted?: ((() => void) | (() => void)[]) | undefined;
            beforeUpdate?: ((() => void) | (() => void)[]) | undefined;
            updated?: ((() => void) | (() => void)[]) | undefined;
            activated?: ((() => void) | (() => void)[]) | undefined;
            deactivated?: ((() => void) | (() => void)[]) | undefined;
            beforeDestroy?: ((() => void) | (() => void)[]) | undefined;
            beforeUnmount?: ((() => void) | (() => void)[]) | undefined;
            destroyed?: ((() => void) | (() => void)[]) | undefined;
            unmounted?: ((() => void) | (() => void)[]) | undefined;
            renderTracked?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            renderTriggered?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            errorCaptured?: (((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}> | null, info: string) => boolean | void) | ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}> | null, info: string) => boolean | void)[]) | undefined;
        };
        $forceUpdate: () => void;
        $nextTick: typeof import("vue").nextTick;
        $watch<T extends string | ((...args: any) => any)>(source: T, cb: T extends (...args: any) => infer R ? (args_0: R, args_1: R) => any : (...args: any) => any, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
    } & Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
        backgroundColor?: string | undefined;
        closeOnSelect?: boolean | undefined;
        swatches?: string | any[] | undefined;
        disabled?: boolean | undefined;
        fallbackInputClass?: string | any[] | Record<string, any> | null | undefined;
        fallbackInputType?: string | undefined;
        fallbackOkClass?: string | any[] | Record<string, any> | null | undefined;
        fallbackOkText?: string | undefined;
        inline?: boolean | undefined;
        shapes?: string | undefined;
        popoverX?: string | undefined;
        popoverY?: string | undefined;
        rowLength?: string | number | null | undefined;
        showBorder?: boolean | null | undefined;
        showFallback?: boolean | undefined;
        showCheckbox?: boolean | undefined;
        showLabels?: boolean | undefined;
        spacingSize?: number | null | undefined;
        swatchSize?: string | number | null | undefined;
        swatchStyle?: any[] | Record<string, any> | undefined;
        triggerStyle?: any[] | Record<string, any> | undefined;
        wrapperStyle?: any[] | Record<string, any> | undefined;
        modelValue?: string | undefined;
    }>, {
        backgroundColor: string;
        closeOnSelect: boolean;
        swatches: () => "basic";
        disabled: boolean;
        fallbackInputClass: null;
        fallbackInputType: () => "text";
        fallbackOkClass: null;
        fallbackOkText: string;
        inline: boolean;
        shapes: string;
        popoverX: string;
        popoverY: string;
        rowLength: null;
        showBorder: null;
        showFallback: boolean;
        showCheckbox: boolean;
        showLabels: boolean;
        spacingSize: null;
        swatchSize: null;
        modelValue: string;
    }>>> & {
        onClose?: ((...args: any[]) => any) | undefined;
        onOpen?: ((...args: any[]) => any) | undefined;
        "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    } & import("vue").ShallowUnwrapRef<{}> & {} & import("vue").ComponentCustomProperties & {};
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    backgroundColor?: string | undefined;
    closeOnSelect?: boolean | undefined;
    swatches?: string | any[] | undefined;
    disabled?: boolean | undefined;
    fallbackInputClass?: string | any[] | Record<string, any> | null | undefined;
    fallbackInputType?: string | undefined;
    fallbackOkClass?: string | any[] | Record<string, any> | null | undefined;
    fallbackOkText?: string | undefined;
    inline?: boolean | undefined;
    shapes?: string | undefined;
    popoverX?: string | undefined;
    popoverY?: string | undefined;
    rowLength?: string | number | null | undefined;
    showBorder?: boolean | null | undefined;
    showFallback?: boolean | undefined;
    showCheckbox?: boolean | undefined;
    showLabels?: boolean | undefined;
    spacingSize?: number | null | undefined;
    swatchSize?: string | number | null | undefined;
    swatchStyle?: any[] | Record<string, any> | undefined;
    triggerStyle?: any[] | Record<string, any> | undefined;
    wrapperStyle?: any[] | Record<string, any> | undefined;
    modelValue?: string | undefined;
}>, {
    backgroundColor: string;
    closeOnSelect: boolean;
    swatches: () => "basic";
    disabled: boolean;
    fallbackInputClass: null;
    fallbackInputType: () => "text";
    fallbackOkClass: null;
    fallbackOkText: string;
    inline: boolean;
    shapes: string;
    popoverX: string;
    popoverY: string;
    rowLength: null;
    showBorder: null;
    showFallback: boolean;
    showCheckbox: boolean;
    showLabels: boolean;
    spacingSize: null;
    swatchSize: null;
    modelValue: string;
}>>> & {
    onClose?: ((...args: any[]) => any) | undefined;
    onOpen?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "open" | "update:modelValue")[], "close" | "open" | "update:modelValue", {
    disabled: boolean;
    inline: boolean;
    showCheckbox: boolean;
    showBorder: boolean | null;
    showLabels: boolean;
    spacingSize: number | null;
    swatchSize: number | string | null;
    backgroundColor: string;
    closeOnSelect: boolean;
    swatches: any[] | string;
    fallbackInputClass: any[] | Record<string, any> | string | null;
    fallbackInputType: string;
    fallbackOkClass: any[] | Record<string, any> | string | null;
    fallbackOkText: string;
    shapes: string;
    popoverX: string;
    popoverY: string;
    rowLength: number | string | null;
    showFallback: boolean;
    modelValue: string;
}, {}, string> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        trigger: (_: {}) => any;
    };
});
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? P[K] & {
        default: D[K];
    } : P[K];
};
